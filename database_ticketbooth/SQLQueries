
*****
1. User Table

Constraints: enter only if is_active is True 1 --> should not be deleted


DROP TABLE user;

CREATE TABLE user (
    userId INTEGER NOT NULL AUTO_INCREMENT,
    name VARCHAR(32) NOT NULL,
    email VARCHAR(64) NOT NULL,
    gender INTEGER,
    dob DATE,
    country VARCHAR(32),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modifiedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    isActive BIT DEFAULT 1,
    PRIMARY KEY(userId)
);

INSERT INTO user( name, email, gender, dob, country)
VALUES("Kesha","kesha.shah@db.com", 2, "2020-06-30","India");

INSERT INTO user( name, email, gender, dob, country)
VALUES("Kesha","ksshah4@usfca.edu", 2,"2020-11-20","USA");

SELECT user_id, name, email, gender, dob, country FROM user;



*********************************
EVENTS:

Client side validations: 
1. endtime > start time
2. Name <> null
3. Create by a user that is active (by default)

DROP TABLE event;

CREATE TABLE event (
    eventId INTEGER NOT NULL AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL,  
    description TEXT,
    startTime DATETIME NOT NULL,
    endTime DATETIME NOT NULL,
    ownerId INTEGER NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modifiedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    isActive BIT DEFAULT 1,
    PRIMARY KEY(eventId),
    FOREIGN KEY(ownerId) REFERENCES user(userId)
);

INSERT INTO event (name, description, startTime, endTime, ownerId)
VALUES ("Drama night", "An event for theatre drama", "2021-11-21 18:00:00", "2021-11-21 21:00:00", 2 );


INSERT INTO event (name, description, startTime, endTime, ownerId)
VALUES ("Music night", "An event for old songs live performance", "2021-11-30 18:00:00", "2021-11-30 21:00:00", 2 );

SELECT event_id, name, description, startTime, endTime, location, ownerId FROM event;

***************************

Ticket Table:

DROP TABLE ticket;

CREATE TABLE ticket (
    ticketId INTEGER NOT NULL AUTO_INCREMENT,
    userId INTEGER NOT NULL,
    eventId INTEGER NOT NULL,
    count  INTEGER NOT NULL DEFAULT 1,
    PRIMARY KEY(ticketId),
    FOREIGN KEY(userId) REFERENCES user(userId),
    FOREIGN KEY(eventId) REFERENCES event(eventId)
);


INSERT INTO ticket (userId, eventId, count) VALUES(2,1,4);
INSERT INTO ticket (userId, eventId, count) VALUES(1,2,5);

SELECT ticketId, userId, eventId, count FROM ticket;

***************************


