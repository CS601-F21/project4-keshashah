
*****
1. User Table

Constraints: enter only if is_active is True 1 --> should not be deleted


DROP TABLE user;

CREATE TABLE user (
    user_idid INTEGER NOT NULL AUTO_INCREMENT,
    name VARCHAR(32) NOT NULL,
    email VARCHAR(64) NOT NULL,
    gender INTEGER,
    dob DATE,
    country VARCHAR(32),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_active BIT DEFAULT 1,
    PRIMARY KEY(id)
);

INSERT INTO user( name, email, gender, dob, country)
VALUES("Kesha","kesha.shah@db.com", 2, "2020-06-30","India");

INSERT INTO user( name, email, gender, dob, country)
VALUES("Kesha","ksshah4@usfca.edu", 2,"2020-11-20","USA");

SELECT user_id, name, email, gender, dob, country FROM user;



*********************************
EVENTS:

Client side validations: 
1. endtime > start time
2. Name <> null
3. Create by a user that is active (by default)

DROP TABLE event;

CREATE TABLE event (
    event_id INTEGER NOT NULL AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL,  
    description TEXT,
    start_time DATETIME NOT NULL,
    end_time DATETIME NOT NULL,
    location VARCHAR(64) DEFAULT "VIRTUAL" NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    owner_id INTEGER NOT NULL,
    modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY(event_id),
    FOREIGN KEY (owner_id) REFERENCES user(user_id)
);

INSERT INTO event (name, description, start_time, end_time, owner_id)
VALUES ("Drama night", "An event for theatre drama", "2021-11-21 18:00:00", "2021-11-21 21:00:00", 2 );


INSERT INTO event (name, description, start_time, end_time, owner_id)
VALUES ("Music night", "An event for old songs live performance", "2021-11-30 18:00:00", "2021-11-30 21:00:00", 2 );

SELECT event_id, name, description, start_time, end_time, location, owner_id FROM event;

***************************

Ticket Table:

DROP TABLE ticket;

CREATE TABLE ticket {
    ticket_id INTEGER NOT NULL AUTO_INCREMENT,
    user_id INTEGER NOT NULL,
    event_id INTEGER NOT NULL,
    count  INTEGER NOT NULL DEFAULT 1,
    PRIMARY(ticket_id),
    FOREIGN KEY (user_id) REFERENCES user(user_id),
    FOREIGN KEY (event_id) REFERENCES event(event_id)
);


INSERT INTO ticket (user_id, event_id, count) VALUES(2,1,4);
INSERT INTO ticket (user_id, event_id, count) VALUES(3,2,5);

SELECT ticket_id, user_id, event_id, count FROM ticket;

***************************


